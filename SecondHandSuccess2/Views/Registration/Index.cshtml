@model SecondHandSuccess2.Models.PERSON


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class=" RegHeadings">Welcome to Registration</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="RegHeadings">Please fill in your Details:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonIDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonIDNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonIDNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonSurname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonSurname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonSurname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonCellNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonCellNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonCellNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonUserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonUserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonUserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">
        @Html.LabelFor(model => model.PersonPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-Reg-Labels">

        @Html.LabelFor(model => model.PersonType, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownList("PersonType", new List<SelectListItem>
       { new SelectListItem{Text = "Student", Value = "Person", Selected=true},
       new SelectListItem{Text = "Lecturer", Value = "Lecturer"},
       })


        </div>
    </div>

    @*@Html.DropDownList("bookISBN", new SelectList(ViewBag.books, "bookISBN", "bookName", new { @class = "form-control" }))
        @Html.ValidationMessageFor(model => model.bookISBN)*@


    @*@Html.EditorFor(model => model.PersonType, new { htmlAttributes = new { @class = "form-control" } })



        @*<div class="form-group">
                @Html.LabelFor(model => model.PersonRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PersonRating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PersonRating, "", new { @class = "text-danger" })
                </div>
            </div>*@

    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sign Up" class="btn btn-default" />


        </div>
    </div>
}
